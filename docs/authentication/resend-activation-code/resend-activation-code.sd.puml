@startuml
!theme cerulean
participant "API" as API
participant "Controller" as Ctrl
participant "Service" as Service
participant "Repository" as Repo
participant "User" as User
participant "Mapper" as Mapper
participant "EventEmitter" as Emitter

--> API: POST /api/resend-activation-code
API -> Ctrl: resendActivationCode(request)
activate Ctrl
Ctrl -> Ctrl: email = req.body.email
Ctrl -> Service: resendActivationCode(email)
activate Service
Service -> Repo: user = getUserByEmail(email)
activate Repo
deactivate Repo
alt user not found
    Service --> API: throw UserNotFoundError
        
    <-- API: 404 UserNotFoundError
    note right of Ctrl
        Finish the workflow
    end note
end
Service -> User: user.isActive()
activate User
deactivate User
alt user is active
    Service --> API: throw UserAlreadyRegisteredError
        
    <-- API: 403 UserAlreadyRegisteredError
    note right of Ctrl
        Finish the workflow
    end note
end

alt user.activationCode && !user.activationCode.isExpired()
    Service --> API: throw BadRequestError
        
    <-- API: 400 BadRequestError: You've already requested an activation code
    note right of Ctrl
        Finish the workflow
    end note
end

Service -> User: user.generateActivationCode()
activate User
deactivate User

Service -> Repo: updateUser(user)
activate Repo
deactivate Repo

Service -> Mapper: codes = UserMapper.toUserCodesDto(user)
activate Mapper
deactivate Mapper
Service -> Emitter: emit('CreateUserSendEmail', codes)
activate Emitter
deactivate Emitter
Service --> Ctrl
deactivate Service
Ctrl --> API
deactivate Ctrl
<-- API : 200


@enduml