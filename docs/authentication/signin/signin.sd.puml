@startuml
!theme cerulean
participant "API" as API
participant "Controller" as Ctrl
participant "Service" as Service
participant "Repository" as Repo
participant "User" as User
participant "IPasswordManager" as PassManager
participant "Encrypter" as Encrypter
participant "RefreshTokenStore" as RefreshTokenStore


--> API: POST /api/signin
API -> Ctrl: signIn(request)
activate Ctrl
Ctrl -> Ctrl: {email, password} = request.body
Ctrl -> Service: signIn(email, password)
activate Service
Service -> Repo: user = getUserByEmail(email)
activate Repo
deactivate Repo
alt user not found
        Service --> API: throw BadRequestError
        
        <-- API: 400 BadRequestError
    end
    note right of Ctrl
        Finish the workflow
end note

Service -> User: user.isActive()
activate User
deactivate User
alt user is not active
    Service --> API: throw BadRequestError
    note right of Ctrl
        Finish the workflow
    end note
    <-- API: 400 BadRequestError
end

Service -> PassManager: isPasswordValid = isPasswordValid(password, user.password)
activate PassManager
deactivate PassManager
alt password is not valid
    Service --> API: throw BadRequestError
    note right of Ctrl
        Finish the workflow
    end note
    <-- API: 400 BadRequestError
end

Service -> Encrypter: tokens = encrypter.encrypt({user.id, user.email, user.role, user.isActive})
activate Encrypter
deactivate Encrypter

Service -> RefreshTokenStore: refreshTokenStore.saveRefreshToken(tokens.refreshToken)
activate RefreshTokenStore
deactivate RefreshTokenStore

Service -> Ctrl: {token, refreshToken}
deactivate Service
Ctrl -> API: {token, refreshToken}
deactivate Ctrl
<-- API : 200 {token, refreshToken}


@enduml