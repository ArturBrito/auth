@startuml
!theme cerulean
participant "API" as API
participant "Controller" as Ctrl
participant "Service" as Service
participant "Repository" as Repo
participant "User" as User
participant "Mapper" as Mapper
participant "UserDto" as Dto

--> API: PUT /api/user/activate/:email/:activationCode
API -> Ctrl: activateUser(request)
activate Ctrl
Ctrl -> Ctrl: {activationCode, userEmail} = request.params
Ctrl -> Service: activateUser(userEmail, activationCode)
deactivate Ctrl
activate Service
Service -> Repo: user = getUserByEmail(userEmail)
activate Repo
deactivate Repo
alt user dont't exist
    Service --> API: throw UserNotFoundError
    note right of Ctrl
        Finish the workflow
    end note
    <-- API: 404 UserNotFoundError
end
Service -> User: user.activate(activationCode)
activate User

alt validation code don't match
    User --> API: throw BadRequestError('Invalid activation code')
    note right of Ctrl
        Finish the workflow
    end note
    <-- API: 400 BadRequestError('Invalid activation code')
end
User -> User: _isActive = true
User -> User: _activationCode = 'activated'
User --> Service
deactivate User

Service -> Repo: updateUser(user)
activate Repo
deactivate Repo

Service -> Mapper: userDto = UserMapper.toUserDto(user)
activate Mapper
Mapper -> UserDto
activate UserDto
deactivate UserDto
deactivate Mapper
Service --> Ctrl: dto
deactivate Service
activate Ctrl
Ctrl --> API: activatedUser
deactivate Ctrl
<-- API : 200 activatedUser

@enduml