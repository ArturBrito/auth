@startuml
!theme cerulean
participant "API" as API
participant "Controller" as Ctrl
participant "Service" as Service
participant "Repository" as Repo
participant "PasswordManager" as PasswordManager
participant "User" as User
participant "Mapper" as Mapper
participant "UserDto" as Dto
participant "EventEmitter" as Emitter

--> API: PUT /api/user/change-password
API -> Ctrl: activateUser(request)
activate Ctrl
Ctrl -> Ctrl: {userEmail, password, newPassword} = request.params
Ctrl -> Service: changePassword(userEmail, password, newPassword)
deactivate Ctrl

activate Service
Service -> Repo: user = getUserByEmail(userEmail)

activate Repo
deactivate Repo
alt user dont't exist
    Service --> API: throw UserNotFoundError
    note right of Ctrl
        Finish the workflow
    end note
    <-- API: 404 UserNotFoundError
end

Service -> PasswordManager: isPasswordCorrect = comparePasswords(password, user.password)
activate PasswordManager
deactivate PasswordManager

alt isPasswordCorrect is false
    Service --> API: throw UserNotFoundError()
    note right of Ctrl
        Finish the workflow
    end note
    <-- API: 404 UserNotFoundError()
end

Service -> PasswordManager: hashedPassword = hashPassword(newPassword)
activate PasswordManager
deactivate PasswordManager

Service -> User: isPasswordValid = User.isValidPassword(newPassword, passwordRequirements) // passwordRequirements is from config
activate User
deactivate User

alt isPasswordValid is false
    Service --> API: throw InvalidUserError('Password does not meet requirements')
    note right of Ctrl
        Finish the workflow
    end note
    <-- API: 400 InvalidUserError('Password does not meet requirements')
end

Service -> Service : user.setPassword(hashedPassword)

Service -> Repo: updateUser(user)
activate Repo
deactivate Repo

Service -> Mapper: userDto = UserMapper.toUserDto(user)
activate Mapper
Mapper -> UserDto
activate UserDto
deactivate UserDto
deactivate Mapper

Service -> Emitter: emit('PasswordChanged', userDto)
activate Emitter
deactivate Emitter

Service --> Ctrl
deactivate Service
activate Ctrl
Ctrl --> API:
deactivate Ctrl
<-- API : 200 changedPassword

@enduml